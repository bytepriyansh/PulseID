import { Page, Text, View, Document, StyleSheet, Font } from '@react-pdf/renderer';

Font.register({
    family: 'Inter',
    fonts: [
        {
            src: 'https://fonts.gstatic.com/s/inter/v12/UcCO3FwrK3iLTeHuS_fvQtMwCp50KnMw2boKoduKmMEVuLyfMZg.ttf',
            fontWeight: 400
        },
        {
            src: 'https://fonts.gstatic.com/s/inter/v12/UcCO3FwrK3iLTeHuS_fvQtMwCp50KnMw2boKoduKmMEVuFuYMZg.ttf',
            fontWeight: 600
        },
        {
            src: 'https://fonts.gstatic.com/s/inter/v12/UcCO3FwrK3iLTeHuS_fvQtMwCp50KnMw2boKoduKmMEVuDyYMZg.ttf',
            fontWeight: 700
        }
    ]
});

const styles = StyleSheet.create({
    page: {
        flexDirection: 'column',
        backgroundColor: '#FFFFFF',
        padding: 40,
        fontFamily: 'Inter'
    },
    header: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        marginBottom: 30,
        borderBottomWidth: 2,
        borderBottomColor: '#1E40AF',
        paddingBottom: 15
    },
    title: {
        fontSize: 24,
        fontWeight: 'bold',
        color: '#1E40AF'
    },
    metadata: {
        fontSize: 10,
        color: '#6B7280'
    },
    section: {
        marginBottom: 20
    },
    sectionTitle: {
        fontSize: 16,
        fontWeight: 'bold',
        marginBottom: 10,
        color: '#1E40AF'
    },
    card: {
        backgroundColor: '#F9FAFB',
        borderWidth: 1,
        borderColor: '#E5E7EB',
        borderRadius: 4,
        padding: 15,
        marginBottom: 10
    },
    row: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        marginBottom: 5
    },
    label: {
        fontSize: 12,
        fontWeight: 'bold',
        color: '#374151'
    },
    value: {
        fontSize: 12,
        color: '#4B5563'
    },
    criticalValue: {
        fontSize: 12,
        color: '#DC2626',
        fontWeight: 'bold'
    },
    riskBadge: {
        backgroundColor: '#DC2626',
        color: 'white',
        paddingHorizontal: 10,
        paddingVertical: 3,
        borderRadius: 10,
        fontSize: 10,
        fontWeight: 'bold',
        marginLeft: 5
    },
    guideline: {
        flexDirection: 'row',
        marginBottom: 5
    },
    guidelineNumber: {
        width: 20,
        fontSize: 10,
        fontWeight: 'bold',
        color: '#065F46'
    },
    guidelineText: {
        fontSize: 10,
        color: '#065F46',
        flex: 1
    },
    footer: {
        position: 'absolute',
        bottom: 20,
        left: 40,
        right: 40,
        fontSize: 12,
        color: '#191c20',
        textAlign: 'center'
    }
});

interface ReportData {
    generatedDate: string;
    generatedTime: string;
    profile: {
        name: string;
        age: number;
        gender: string;
        bloodGroup: string;
        conditions: string;
        medications: string;
        allergies: string;
        symptoms: string;
        emergencyContact: string;
    };
    riskAssessment: {
        level: string;
        analysisDate: string;
        summary: string;
        guidelines: string[];
    };
}

const ReportPDF = ({ reportData }: { reportData: ReportData }) => (
    <Document>
        <Page size="A4" style={styles.page}>
            <View style={styles.header}>
                <View>
                    <Text style={styles.title}>Medical Emergency Report</Text>
                    <Text style={styles.metadata}>Generated by PulseID</Text>
                </View>
                <View>
                    <Text style={styles.metadata}>Report ID: PID-{new Date().getFullYear()}-{Math.floor(Math.random() * 9000 + 1000)}</Text>
                    <Text style={styles.metadata}>
                        Generated: {reportData.generatedDate} at {reportData.generatedTime}
                    </Text>
                </View>
            </View>

            <View style={styles.section}>
                <Text style={styles.sectionTitle}>Patient Information</Text>

                <View style={styles.card}>
                    <View style={styles.row}>
                        <Text style={styles.label}>Name:</Text>
                        <Text style={styles.value}>{reportData.profile.name}</Text>
                    </View>
                    <View style={styles.row}>
                        <Text style={styles.label}>Age:</Text>
                        <Text style={styles.value}>{reportData.profile.age}</Text>
                    </View>
                    <View style={styles.row}>
                        <Text style={styles.label}>Gender:</Text>
                        <Text style={styles.value}>{reportData.profile.gender}</Text>
                    </View>
                    <View style={styles.row}>
                        <Text style={styles.label}>Blood Group:</Text>
                        <Text style={reportData.profile.bloodGroup === 'Not provided' ? styles.value : styles.criticalValue}>
                            {reportData.profile.bloodGroup}
                        </Text>
                    </View>
                </View>
            </View>

            <View style={styles.section}>
                <Text style={styles.sectionTitle}>Medical Information</Text>

                <View style={styles.card}>
                    <View style={styles.row}>
                        <Text style={styles.label}>Conditions:</Text>
                        <Text style={styles.value}>{reportData.profile.conditions}</Text>
                    </View>
                    <View style={styles.row}>
                        <Text style={styles.label}>Medications:</Text>
                        <Text style={styles.value}>{reportData.profile.medications}</Text>
                    </View>
                    <View style={styles.row}>
                        <Text style={styles.label}>Allergies:</Text>
                        <Text style={reportData.profile.allergies === 'None reported' ? styles.value : styles.criticalValue}>
                            {reportData.profile.allergies}
                        </Text>
                    </View>
                    <View style={styles.row}>
                        <Text style={styles.label}>Symptoms:</Text>
                        <Text style={styles.value}>{reportData.profile.symptoms}</Text>
                    </View>
                </View>
            </View>

            {/* Emergency Contact */}
            <View style={styles.section}>
                <Text style={styles.sectionTitle}>Emergency Contact</Text>
                <View style={styles.card}>
                    <Text style={styles.value}>{reportData.profile.emergencyContact}</Text>
                </View>
            </View>

            <View style={styles.section}>
                <Text style={styles.sectionTitle}>Risk Assessment</Text>

                <View style={styles.card}>
                    <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 10 }}>
                        <Text style={styles.label}>Risk Level:</Text>
                        <Text style={styles.riskBadge}>{reportData.riskAssessment.level} RISK</Text>
                    </View>

                    <Text style={{ fontSize: 10, marginBottom: 10, color: '#4B5563' }}>
                        Analysis Date: {reportData.riskAssessment.analysisDate}
                    </Text>

                    <Text style={{ fontSize: 10, marginBottom: 10, color: '#4B5563' }}>
                        {reportData.riskAssessment.summary}
                    </Text>
                </View>
            </View>


            <View style={styles.footer}>
                <Text>This document contains sensitive medical information. Please handle with care.</Text>
                <Text>Generated by PulseID - {new Date().toLocaleDateString()}</Text>
            </View>
        </Page>
    </Document>
);

export default ReportPDF;